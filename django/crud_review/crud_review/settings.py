"""
Django settings for crud_review project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'yx(n*=96_0#b(xeuopu@6mscweau$@%u5mbogxu1%7^fidm0*-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'students',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'imagekit', # pip install Pillow pilkit django-imagekit
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'crud_review.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'crud_review', 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'crud_review.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# Static File의 URL을 만들 때 사용하는 값
STATIC_URL = '/static/' # Production 단계에서 사용하는 옵션
# 'python manage.py collectstatic'
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# 추가적인 Static File 위치 등록
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'crud_review', 'static'),
]

# 정리
# - app 단위로 필요한 파일은 app 폴더 안의
#   'static' 폴더를 만들어 정리
# - 프로젝트 전체에서 사용할 파일의 경우, settings.py 파일에
#   'STATICFILES_DIRS' 설정을 통해 위치 등록 후 파일 정리
# - 모든 이미지 파일은 '{% static %}' 키워드를 통해
#   Static File의 URL을 만들어 img tag에서 사용


# Static vs. Media
# 1. Static
# - 웹 서비스에서 사용하기 위하여 미리 준비해놓은 파일
# - 변경 되지 않는 고정된 파일들
# - 위치가 고정 -> URL이 고정되어 있음.

# 2. Media
# - 사용자가 웹 서비스를 사용하면서 업로드한 파일
# - 사용자가 어떤 파일을 올릴지 모름 -> URL 동적


# Media Files

# 1. 파일이 저장될 위치 지정
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 2. 업로드된 파일의 URL을 만들 때 사용할 주소
MEDIA_URL = '/media/'